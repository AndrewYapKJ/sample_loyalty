<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="utf-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>Gussmann Loyalty Program - Login</title>
   <link rel="icon" type="image/png" href="favicon.png" />
   <style>
      body {
         margin: 0;
         padding: 0;
         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
         background: linear-gradient(135deg, #1e4a3b 0%, #2d5e4e 100%);
         min-height: 100vh;
      }

      .login-container {
         min-height: 100vh;
         display: flex;
         align-items: center;
         justify-content: center;
         padding: 20px;
      }

      .login-card {
         background: white;
         border-radius: 12px;
         box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
         padding: 2.5rem;
         width: 100%;
         max-width: 400px;
      }

      .brand-logo {
         text-align: center;
         margin-bottom: 2rem;
      }

      .brand-logo h1 {
         color: #1e4a3b;
         font-size: 2rem;
         font-weight: 700;
         margin: 0;
         margin-bottom: 0.5rem;
      }

      .brand-logo p {
         color: #2d5e4e;
         font-size: 1rem;
         margin: 0;
      }

      .form-group {
         margin-bottom: 1.5rem;
      }

      .form-label {
         display: block;
         margin-bottom: 0.5rem;
         color: #333;
         font-weight: 500;
      }

      .form-control {
         width: 100%;
         padding: 0.75rem 1rem;
         border: 2px solid #e1e5e9;
         border-radius: 8px;
         font-size: 1rem;
         transition: border-color 0.15s ease-in-out;
         box-sizing: border-box;
      }

      .form-control:focus {
         outline: none;
         border-color: #2d5e4e;
         box-shadow: 0 0 0 3px rgba(45, 94, 78, 0.1);
      }

      .btn-login {
         width: 100%;
         padding: 0.875rem 1rem;
         background: linear-gradient(135deg, #1e4a3b 0%, #2d5e4e 100%);
         border: none;
         border-radius: 8px;
         color: white;
         font-size: 1rem;
         font-weight: 600;
         cursor: pointer;
         transition: transform 0.15s ease;
      }

      .btn-login:hover {
         transform: translateY(-1px);
      }

      .btn-login:disabled {
         opacity: 0.6;
         cursor: not-allowed;
         transform: none;
      }

      .alert {
         padding: 0.75rem 1rem;
         border-radius: 6px;
         margin-bottom: 1rem;
         font-size: 0.9rem;
      }

      .alert-danger {
         background-color: #f8d7da;
         color: #721c24;
         border: 1px solid #f5c6cb;
      }

      .alert-success {
         background-color: #d4edda;
         color: #155724;
         border: 1px solid #c3e6cb;
      }

      .spinner-border {
         width: 1rem;
         height: 1rem;
         border: 2px solid currentColor;
         border-right-color: transparent;
         border-radius: 50%;
         animation: spinner-border 0.75s linear infinite;
         display: inline-block;
         margin-right: 0.5rem;
      }

      @@keyframes spinner-border {
         to {
            transform: rotate(360deg);
         }
      }
   </style>
</head>

<body>
   <div class="login-container">
      <div class="login-card">
         <div class="brand-logo">
            <h1>ðŸŽ¯ Gussmann</h1>
            <p>Loyalty Program Management</p>
         </div>

         <div id="error-message" class="alert alert-danger" style="display: none;"></div>
         <div id="success-message" class="alert alert-success" style="display: none;"></div>

         <form id="login-form">
            <div class="form-group">
               <label class="form-label">Username</label>
               <input type="text" id="username" class="form-control" placeholder="Enter username" required />
            </div>

            <div class="form-group">
               <label class="form-label">Password</label>
               <input type="password" id="password" class="form-control" placeholder="Enter password" required />
            </div>

            <button type="submit" id="login-btn" class="btn-login">
               <span id="login-text">Sign In</span>
               <span id="login-spinner" class="spinner-border" style="display: none;"></span>
            </button>
         </form>
      </div>
   </div>

   <script>
      document.getElementById('login-form').addEventListener('submit', async function (e) {
         e.preventDefault();

         const username = document.getElementById('username').value;
         const password = document.getElementById('password').value;
         const loginBtn = document.getElementById('login-btn');
         const loginText = document.getElementById('login-text');
         const loginSpinner = document.getElementById('login-spinner');
         const errorDiv = document.getElementById('error-message');
         const successDiv = document.getElementById('success-message');

         // Reset messages
         errorDiv.style.display = 'none';
         successDiv.style.display = 'none';

         // Show loading state
         loginBtn.disabled = true;
         loginText.style.display = 'none';
         loginSpinner.style.display = 'inline-block';

         try {
            const response = await fetch('/api/auth/login', {
               method: 'POST',
               headers: {
                  'Content-Type': 'application/json',
               },
               body: JSON.stringify({
                  username: username,
                  password: password
               })
            });

            const data = await response.json();
            console.log('Login response:', data);

            if (response.ok && data.accessToken) {
               successDiv.textContent = 'Login successful! Redirecting...';
               successDiv.style.display = 'block';

               // Store tokens
               localStorage.setItem('jwtToken', data.accessToken);
               localStorage.setItem('refreshToken', data.refreshToken);

               console.log('Tokens stored successfully');

               // Redirect to test dashboard
               setTimeout(() => {
                  window.location.href = '/test-dashboard';
               }, 500);
            } else {
               errorDiv.textContent = data.message || 'Login failed. Please try again.';
               errorDiv.style.display = 'block';
            }
         } catch (error) {
            console.error('Login error:', error);
            errorDiv.textContent = 'Network error. Please try again.';
            errorDiv.style.display = 'block';
         } finally {
            // Reset loading state
            loginBtn.disabled = false;
            loginText.style.display = 'inline-block';
            loginSpinner.style.display = 'none';
         }
      });
   </script>
</body>

</html>