@rendermode InteractiveServer

<!-- Minimal, namespaced NavMenu to avoid global CSS collisions -->
<div class="app-sidebar">
    <div class="app-sidebar-scroll">
        <ul class="app-nav-list @(IsCollapsed ? "collapsed" : "")">
            <li class="app-nav-item">
                <a class="app-nav-link" href="/dashboard">
                    <span class="app-icon bi bi-house-door-fill" aria-hidden="true"></span>
                    <span class="app-label">Dashboard</span>
                </a>
            </li>
            <li class="app-nav-item">
                <a class="app-nav-link" href="/members">
                    <span class="app-icon bi bi-people-fill" aria-hidden="true"></span>
                    <span class="app-label">Members</span>
                </a>
            </li>
            <li class="app-nav-item">
                <a class="app-nav-link" href="/stores">
                    <span class="app-icon bi bi-shop" aria-hidden="true"></span>
                    <span class="app-label">Stores</span>
                </a>
            </li>
            <li class="app-nav-item">
                <a class="app-nav-link" href="/campaigns">
                    <span class="app-icon bi bi-megaphone" aria-hidden="true"></span>
                    <span class="app-label">Campaigns & Vouchers</span>
                </a>
            </li>

            <li class="app-nav-separator" aria-hidden="true"></li>

            <li class="app-nav-item mt-auto">
                <button @onclick="Logout" class="app-logout-btn">Logout</button>
            </li>
        </ul>
    </div>
</div>

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; } = null!;
    [Inject] private NavigationManager Navigation { get; set; } = null!;

    [Parameter] public bool IsCollapsed { get; set; }

    private async Task Logout()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "jwtToken");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "refreshToken");
            Navigation.NavigateTo("/", true);
        }
        catch
        {
            Navigation.NavigateTo("/", true);
        }
    }
}