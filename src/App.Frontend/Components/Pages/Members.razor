@page "/members"
@using gussmann_loyalty_program.Services
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject ISimpleAuthService AuthService
@rendermode InteractiveServer

<PageTitle>Members - Gussmann Loyalty Program</PageTitle>

@if (!isAuthenticated)
{
   <!-- Show nothing, redirect will happen -->
}
else
{
   <div class="container-fluid">
      <div class="row mb-4">
         <div class="col">
            <h1 class="display-5">
               <i class="bi bi-people-fill text-success me-3"></i>
               Members Management
            </h1>
            <p class="lead text-muted">Manage your loyalty program members</p>
         </div>
      </div>

      <div class="alert alert-info border-0" role="alert">
         <i class="bi bi-info-circle me-2"></i>
         <strong>Coming Soon:</strong> Member management functionality is being developed.
      </div>

      <div class="text-center py-5">
         <i class="bi bi-people-fill text-muted" style="font-size: 4rem;"></i>
         <h3 class="mt-3 text-muted">Member Management</h3>
         <p class="text-muted">This feature will allow you to:</p>
         <ul class="list-unstyled text-muted">
            <li>• View and manage member profiles</li>
            <li>• Track member activity and points</li>
            <li>• Assign membership tiers</li>
            <li>• Process member registrations</li>
         </ul>
      </div>
   </div>
}

@code {
   private bool isAuthenticated = false;

   protected override async Task OnAfterRenderAsync(bool firstRender)
   {
      if (firstRender)
      {
         await CheckAuthentication();
         StateHasChanged();
      }
   }

   private async Task CheckAuthentication()
   {
      try
      {
         var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "jwtToken");

         if (string.IsNullOrEmpty(token))
         {
            Navigation.NavigateTo("/", true);
            return;
         }

         isAuthenticated = await AuthService.ValidateTokenAsync(token);

         if (!isAuthenticated)
         {
            Navigation.NavigateTo("/", true);
         }
      }
      catch (Exception ex)
      {
         Console.WriteLine($"Authentication error: {ex.Message}");
         Navigation.NavigateTo("/", true);
      }
   }
}